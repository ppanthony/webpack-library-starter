!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("webpack-library-starter",[],e):"object"==typeof exports?exports["webpack-library-starter"]=e():t["webpack-library-starter"]=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=3)}([function(t,e,n){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function d(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function c(t,e){for(var n={},o=[],r=0;r<t.length;r++){var i=t[r],c=e.base?i[0]+e.base:i[0],l=n[c]||0,s="".concat(c," ").concat(l);n[c]=l+1;var u=d(s),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==u?(a[u].references++,a[u].updater(p)):a.push({identifier:s,updater:g(p,e),references:1}),o.push(s)}return o}function l(t){var e=document.createElement("style"),o=t.attributes||{};if(void 0===o.nonce){var r=n.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach(function(t){e.setAttribute(t,o[t])}),"function"==typeof t.insert)t.insert(e);else{var a=i(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var s,u=(s=[],function(t,e){return s[t]=e,s.filter(Boolean).join("\n")});function p(t,e,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(t.styleSheet)t.styleSheet.cssText=u(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}var h=null,f=0;function g(t,e){var n,o,r;if(e.singleton){var i=f++;n=h||(h=l(e)),o=p.bind(null,n,i,!1),r=p.bind(null,n,i,!0)}else n=l(e),o=function(t,e,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?t.setAttribute("media",r):t.removeAttribute("media"),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}.bind(null,n,e),r=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=r());var n=c(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var o=0;o<n.length;o++){var r=d(n[o]);a[r].references--}for(var i=c(t,e),l=0;l<n.length;l++){var s=d(n[l]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=i}}}},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||"",o=t[3];if(!o)return n;if(e&&"function"==typeof btoa){var r=(a=o,d=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),"/*# ".concat(c," */")),i=o.sources.map(function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")});return[n].concat(i).concat([r]).join("\n")}var a,d,c;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n}).join("")},e.i=function(t,n,o){"string"==typeof t&&(t=[[null,t,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(r[a]=!0)}for(var d=0;d<t.length;d++){var c=[].concat(t[d]);o&&r[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.mixin=function(t,e){var n=t;return Object.keys(e).forEach(function(t){({}).hasOwnProperty.call(e,t)&&(n[t]=e[t])}),n},e.throttle=function(t){var e,n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,r=Date.now();return function(){for(var i=arguments.length,a=new Array(i),d=0;d<i;d++)a[d]=arguments[d];var c=this;function l(){r=Date.now(),e=null,t.apply(c,a)}clearTimeout(e),(n=Date.now()-r)>o?l():e=setTimeout(l,o-n)}},e.isNull=function(t){return"null"===Object.prototype.toString.call(t).replace(/\[object[\s]/,"").replace("]","").toLowerCase()},e.default=void 0;e.default=null},function(t,e,n){"use strict";var o=i(n(4)),r=i(n(9));function i(t){return t&&t.__esModule?t:{default:t}}var a=new o.default;a.init(function(t){var e=new r.default({root:"body",exclude:[document.querySelector(".capable-widget")],theme:"you-custom-theme-class"});t.addEventListener("click",function(){a.setEnabled(!a.getEnabled()),a.getEnabled()?e.enable():e.disable()})})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(5))&&o.__esModule?o:{default:o};function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var a=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,(n=[{key:"init",value:function(t){(new r.default).onReady(function(e){t(e)})}},{key:"setEnabled",value:function(t){alert(t),this.enabled=t}},{key:"getEnabled",value:function(){return this.enabled}}])&&i(e.prototype,n),o&&i(e,o),t}();e.default=a,t.exports=e.default},function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n(6);var r=n(8),i=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,i;return e=t,(n=[{key:"buildUX",value:function(){var t=document.createElement("a");return t.classList.add("capable-widget"),document.body.appendChild(t),t}},{key:"onReady",value:function(t){var e=this;r(function(){t(e.buildUX())})}}])&&o(e.prototype,n),i&&o(e,i),t}();e.default=i,t.exports=e.default},function(t,e,n){var o=n(0),r=n(7);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var i={insert:"head",singleton:!1},a=(o(r,i),r.locals?r.locals:{});t.exports=a},function(t,e,n){(e=n(1)(!1)).push([t.i,".capable-widget {\n    border:1px solid red;\n    width:60px;\n    height:60px;\n    position: absolute;\n    bottom:10px;\n    right:10px;\n    display:block;\n}\n.you-custom-theme-class .margin {\n    background-color: blue;\n    opacity:0.1;\n}\n\n.you-custom-theme-class .border {\n    background-color: red;\n    opacity:0.1;\n}\n\n.you-custom-theme-class .padding {\n    background-color: green;\n    opacity:0.1;\n}\n\n.you-custom-theme-class .content {\n    background-color: gray;\n    opacity:0.1;\n}",""]),t.exports=e},function(t,e,n){"use strict";t.exports=function(t){if("undefined"==typeof document)throw new Error("document-ready only runs in the browser");var e=document.readyState;if("complete"===e||"interactive"===e)return setTimeout(t,0);document.addEventListener("DOMContentLoaded",function(){t()})}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n(10);var o,r=n(12),i=n(2),a=(o=n(13))&&o.__esModule?o:{default:o};function d(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function c(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var l=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._doc=window.document,this.root=e.root?(0,r.isDOM)(e.root)?e.root:(0,r.$)(e.root):(0,r.$)("body"),(0,i.isNull)(this.root)&&(a.default.warn("Root element is null. Auto select body as root"),this.root=(0,r.$)("body")),this.theme=e.theme||"dom-inspector-theme-default",this.exclude=this._formatExcludeOption(e.exclude||[]),this.overlay={},this.overlayId="",this.target="",this.destroyed=!1,this._cachedTarget="",this._throttleOnMove=(0,i.throttle)(this._onMove.bind(this),100),this._clickEventOnElement=function(t){for(var e=0;e<this.exclude.length;e+=1){var n=this.exclude[e];if(n.isEqualNode(t.target)||(0,r.isParent)(t.target,n))return}alert("call")},this._init()}var e,n,o;return e=t,(n=[{key:"enable",value:function(){if(this.destroyed)return a.default.warn("Inspector instance has been destroyed! Please redeclare it.");this.overlay.parent.style.display="block",this.root.addEventListener("mousemove",this._throttleOnMove),this.destroyed||this.root.addEventListener("click",this._clickEventOnElement)}},{key:"pause",value:function(){this.root.removeEventListener("mousemove",this._throttleOnMove),this.root.removeEventListener("click",this._clickEventOnElement)}},{key:"disable",value:function(){this.overlay.parent.style.display="none",this.overlay.parent.style.width=0,this.overlay.parent.style.height=0,this.target=null,this.root.removeEventListener("click",this._clickEventOnElement),this.root.removeEventListener("mousemove",this._throttleOnMove)}},{key:"destroy",value:function(){this.destroyed=!0,this.disable(),this.overlay={}}},{key:"getXPath",value:function(t){if(!(0,r.isDOM)(t)&&!this.target)return a.default.warn("Target element is not found. Warning function name:%c getXPath","color: #ff5151");if(t||(t=this.target),t.hasAttribute("id"))return"//".concat(t.tagName.toLowerCase(),'[@id="').concat(t.id,'"]');if(t.hasAttribute("class"))return"//".concat(t.tagName.toLowerCase(),'[@class="').concat(t.getAttribute("class"),'"]');for(var e=[];t.nodeType===Node.ELEMENT_NODE;){var n=t.nodeName.toLowerCase(),o=(0,r.findIndex)(t,n);e.push("".concat(t.tagName.toLowerCase()).concat(1===o?"":"[".concat(o,"]"))),t=t.parentNode}return"/".concat(e.reverse().join("/"))}},{key:"getSelector",value:function(t){if(!(0,r.isDOM)(t)&&!this.target)return a.default.warn("Target element is not found. Warning function name:%c getCssPath","color: #ff5151");t||(t=this.target);for(var e=[];t.nodeType===Node.ELEMENT_NODE;){var n=t.nodeName.toLowerCase();if(t.hasAttribute("id"))n+="#".concat(t.id);else if(t.hasAttribute("class"))n+=".".concat(t.className.replace(/\s+/g," ").split(" ").join("."));else{var o=(0,r.findIndex)(t,n);1!==o&&(n+=":nth-of-type(".concat(o,")"))}e.unshift(n),t=t.parentNode}return e.join(">")}},{key:"getElementInfo",value:function(t){return(0,r.isDOM)(t)||this.target?(0,r.getElementInfo)(t||this.target):a.default.warn("Target element is not found. Warning function name:%c getElementInfo","color: #ff5151")}},{key:"_init",value:function(){this.overlayId="dom-inspector-".concat(Date.now());var t=this._createElement("div",{id:this.overlayId,class:"dom-inspector ".concat(this.theme),style:"z-index: ".concat((0,r.getMaxZIndex)()+1)});this.overlay={parent:t,content:this._createSurroundEle(t,"content"),paddingTop:this._createSurroundEle(t,"padding padding-top"),paddingRight:this._createSurroundEle(t,"padding padding-right"),paddingBottom:this._createSurroundEle(t,"padding padding-bottom"),paddingLeft:this._createSurroundEle(t,"padding padding-left"),borderTop:this._createSurroundEle(t,"border border-top"),borderRight:this._createSurroundEle(t,"border border-right"),borderBottom:this._createSurroundEle(t,"border border-bottom"),borderLeft:this._createSurroundEle(t,"border border-left"),marginTop:this._createSurroundEle(t,"margin margin-top"),marginRight:this._createSurroundEle(t,"margin margin-right"),marginBottom:this._createSurroundEle(t,"margin margin-bottom"),marginLeft:this._createSurroundEle(t,"margin margin-left"),tips:this._createSurroundEle(t,"tips",'<div class="tag"></div><div class="id"></div><div class="class"></div><div class="line">&nbsp;|&nbsp;</div><div class="size"></div><div class="triangle"></div>')},(0,r.$)("body").appendChild(t)}},{key:"_createElement",value:function(t,e,n){var o=this._doc.createElement(t);return Object.keys(e).forEach(function(t){o.setAttribute(t,e[t])}),n&&(o.innerHTML=n),o}},{key:"_createSurroundEle",value:function(t,e,n){var o=this._createElement("div",{class:e},n);return t.appendChild(o),o}},{key:"_onMove",value:function(t){for(var e=0;e<this.exclude.length;e+=1){var n=this.exclude[e];if(n.isEqualNode(t.target)||(0,r.isParent)(t.target,n))return}if(this.target=t.target,this.target===this._cachedTarget)return null;this._cachedTarget=this.target;var o=(0,r.getElementInfo)(t.target),i={width:o.width,height:o.height},a={width:o["padding-left"]+i.width+o["padding-right"],height:o["padding-top"]+i.height+o["padding-bottom"]},c={width:o["border-left-width"]+a.width+o["border-right-width"],height:o["border-top-width"]+a.height+o["border-bottom-width"]},l={width:o["margin-left"]+c.width+o["margin-right"],height:o["margin-top"]+c.height+o["margin-bottom"]};(0,r.addRule)(this.overlay.parent,{width:"".concat(l.width,"px"),height:"".concat(l.height,"px"),top:"".concat(o.top,"px"),left:"".concat(o.left,"px")}),(0,r.addRule)(this.overlay.content,{width:"".concat(i.width,"px"),height:"".concat(i.height,"px"),top:"".concat(o["margin-top"]+o["border-top-width"]+o["padding-top"],"px"),left:"".concat(o["margin-left"]+o["border-left-width"]+o["padding-left"],"px")}),(0,r.addRule)(this.overlay.paddingTop,{width:"".concat(a.width,"px"),height:"".concat(o["padding-top"],"px"),top:"".concat(o["margin-top"]+o["border-top-width"],"px"),left:"".concat(o["margin-left"]+o["border-left-width"],"px")}),(0,r.addRule)(this.overlay.paddingRight,{width:"".concat(o["padding-right"],"px"),height:"".concat(a.height-o["padding-top"],"px"),top:"".concat(o["padding-top"]+o["margin-top"]+o["border-top-width"],"px"),right:"".concat(o["margin-right"]+o["border-right-width"],"px")}),(0,r.addRule)(this.overlay.paddingBottom,{width:"".concat(a.width-o["padding-right"],"px"),height:"".concat(o["padding-bottom"],"px"),bottom:"".concat(o["margin-bottom"]+o["border-bottom-width"],"px"),right:"".concat(o["padding-right"]+o["margin-right"]+o["border-right-width"],"px")}),(0,r.addRule)(this.overlay.paddingLeft,{width:"".concat(o["padding-left"],"px"),height:"".concat(a.height-o["padding-top"]-o["padding-bottom"],"px"),top:"".concat(o["padding-top"]+o["margin-top"]+o["border-top-width"],"px"),left:"".concat(o["margin-left"]+o["border-left-width"],"px")}),(0,r.addRule)(this.overlay.borderTop,{width:"".concat(c.width,"px"),height:"".concat(o["border-top-width"],"px"),top:"".concat(o["margin-top"],"px"),left:"".concat(o["margin-left"],"px")}),(0,r.addRule)(this.overlay.borderRight,{width:"".concat(o["border-right-width"],"px"),height:"".concat(c.height-o["border-top-width"],"px"),top:"".concat(o["margin-top"]+o["border-top-width"],"px"),right:"".concat(o["margin-right"],"px")}),(0,r.addRule)(this.overlay.borderBottom,{width:"".concat(c.width-o["border-right-width"],"px"),height:"".concat(o["border-bottom-width"],"px"),bottom:"".concat(o["margin-bottom"],"px"),right:"".concat(o["margin-right"]+o["border-right-width"],"px")}),(0,r.addRule)(this.overlay.borderLeft,{width:"".concat(o["border-left-width"],"px"),height:"".concat(c.height-o["border-top-width"]-o["border-bottom-width"],"px"),top:"".concat(o["margin-top"]+o["border-top-width"],"px"),left:"".concat(o["margin-left"],"px")}),(0,r.addRule)(this.overlay.marginTop,{width:"".concat(l.width,"px"),height:"".concat(o["margin-top"],"px"),top:0,left:0}),(0,r.addRule)(this.overlay.marginRight,{width:"".concat(o["margin-right"],"px"),height:"".concat(l.height-o["margin-top"],"px"),top:"".concat(o["margin-top"],"px"),right:0}),(0,r.addRule)(this.overlay.marginBottom,{width:"".concat(l.width-o["margin-right"],"px"),height:"".concat(o["margin-bottom"],"px"),bottom:0,right:"".concat(o["margin-right"],"px")}),(0,r.addRule)(this.overlay.marginLeft,{width:"".concat(o["margin-left"],"px"),height:"".concat(l.height-o["margin-top"]-o["margin-bottom"],"px"),top:"".concat(o["margin-top"],"px"),left:0}),(0,r.$)(".tag",this.overlay.tips).innerHTML=this.target.tagName.toLowerCase(),(0,r.$)(".id",this.overlay.tips).innerHTML=this.target.id?"#".concat(this.target.id):"",(0,r.$)(".class",this.overlay.tips).innerHTML=[].concat(d(this.target.classList)).map(function(t){return".".concat(t)}).join(""),(0,r.$)(".size",this.overlay.tips).innerHTML="".concat(l.width,"x").concat(l.height);var s=0;o.top>=32?(this.overlay.tips.classList.remove("reverse"),s=o.top-24-8):(this.overlay.tips.classList.add("reverse"),s=l.height+o.top+8),(0,r.addRule)(this.overlay.tips,{top:"".concat(s,"px"),left:"".concat(o.left,"px"),display:"block"})}},{key:"_formatExcludeOption",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=[];return t.forEach(function(t){return"string"==typeof t?e.push((0,r.$)(t)):(0,r.isDOM)(t)?e.push(t):void 0}),e}}])&&c(e.prototype,n),o&&c(e,o),t}();e.default=l,t.exports=e.default},function(t,e,n){var o=n(0),r=n(11);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var i={insert:"head",singleton:!1},a=(o(r,i),r.locals?r.locals:{});t.exports=a},function(t,e,n){(e=n(1)(!1)).push([t.i,".dom-inspector {\n    position: fixed;\n    pointer-events: none;\n}\n\n.dom-inspector>div {\n\tposition: absolute;\n}\n\n.dom-inspector .tips {\n\tbackground-color: #333740;\n\tfont-size: 0;\n\tline-height: 18px;\n\tpadding: 3px 10px;\n\tposition: fixed;\n\tborder-radius: 4px;\n\tdisplay: none;\n}\n\n.dom-inspector .tips.reverse{\n\n}\n\n.dom-inspector .tips .triangle {\n\twidth: 0;\n\theight: 0;\n\tposition: absolute;\n\tborder-top: 8px solid #333740;\n\tborder-right: 8px solid transparent;\n\tborder-bottom: 8px solid transparent;\n\tborder-left: 8px solid transparent;\n\tleft: 10px;\n\ttop: 24px;\n}\n\n.dom-inspector .tips.reverse .triangle {\n\tborder-top: 8px solid transparent;\n\tborder-right: 8px solid transparent;\n\tborder-bottom: 8px solid #333740;\n\tborder-left: 8px solid transparent;\n\tleft: 10px;\n\ttop: -16px;\n}\n\n.dom-inspector .tips>div {\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\tfont-size: 12px;\n\tfont-family: Consolas, Menlo, Monaco, Courier, monospace;\n\toverflow: auto;\n}\n\n.dom-inspector .tips .tag {\n\tcolor: #e776e0;\n}\n\n.dom-inspector .tips .id {\n\tcolor: #eba062;\n}\n\n.dom-inspector .tips .class {\n\tcolor: #8dd2fb;\n}\n\n.dom-inspector .tips .line {\n\tcolor: #fff;\n}\n\n.dom-inspector .tips .size {\n\tcolor: #fff;\n}\n\n.dom-inspector-theme-default {\n\n}\n\n.dom-inspector-theme-default .margin {\n\tbackground-color: rgba(255, 81, 81, 0.75);\n}\n\n.dom-inspector-theme-default .border {\n\tbackground-color: rgba(255, 241, 81, 0.75);\n}\n\n.dom-inspector-theme-default .padding {\n\tbackground-color: rgba(81, 255, 126, 0.75);\n}\n\n.dom-inspector-theme-default .content {\n\tbackground-color: rgba(81, 101, 255, 0.75);\n}\n",""]),t.exports=e},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isDOM=i,e.$=a,e.addRule=function(t,e){Object.keys(e).forEach(function(n){t.style[n]=e[n]})},e.findIndex=function(t,e){var n=0;for(;t;)t.nodeName.toLowerCase()===e&&(n+=1),t=t.previousElementSibling;return n},e.getElementInfo=function(t){var e={},n=getComputedStyle(t);return["border-top-width","border-right-width","border-bottom-width","border-left-width","margin-top","margin-right","margin-bottom","margin-left","padding-top","padding-right","padding-bottom","padding-left","z-index"].forEach(function(t){e[t]=parseFloat(n[t])||0}),(0,o.mixin)(e,{width:t.offsetWidth-e["border-left-width"]-e["border-right-width"]-e["padding-left"]-e["padding-right"],height:t.offsetHeight-e["border-top-width"]-e["border-bottom-width"]-e["padding-top"]-e["padding-bottom"]}),(0,o.mixin)(e,function(t){for(var e=getComputedStyle(t),n=t.getBoundingClientRect().left-parseFloat(e["margin-left"]),o=t.getBoundingClientRect().top-parseFloat(e["margin-top"]),r=t.parent;r;)e=getComputedStyle(r),n+=r.frameElement.getBoundingClientRect().left-parseFloat(e["margin-left"]),o+=r.frameElement.getBoundingClientRect().top-parseFloat(e["margin-top"]),r=r.parent;return{top:o,left:n}}(t)),e},e.getMaxZIndex=function(){return[].concat((t=document.all,function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}())).reduce(function(t,e){return Math.max(t,+window.getComputedStyle(e).zIndex||0)},0);var t},e.isParent=function(t,e){for(;null!=t&&"BODY"!==t.tagName.toUpperCase();){if(t==e)return!0;t=t.parentNode}return!1},e.default=void 0;var o=n(2);function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"object"===r(t)&&1===t.nodeType&&"object"===r(t.style)&&"object"===r(t.ownerDocument)}function a(t,e){return e&&i(e)?e.querySelector(t):document.querySelector(t)}var d=a;e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o={};["log","warn","error"].forEach(function(t){o[t]=function(){return console[t].call(this,"DomInspector: "+(arguments.length<=0?void 0:arguments[0]),(arguments.length<=1?void 0:arguments[1])||"")}});var r=o;e.default=r,t.exports=e.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,