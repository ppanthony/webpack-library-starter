!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("webpack-library-starter",[],e):"object"==typeof exports?exports["webpack-library-starter"]=e():t["webpack-library-starter"]=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var r=i(n(1)),o=i(n(8));function i(t){return t&&t.__esModule?t:{default:t}}var a=new r.default;a.init(function(t){var e=new o.default({root:"body",exclude:[],theme:"you-custom-theme-class"});t.addEventListener("click",function(){a.setEnabled(!a.getEnabled()),a.getEnabled()?e.enable():e.disable()})})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r,o=(r=n(2))&&r.__esModule?r:{default:r};function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,(n=[{key:"init",value:function(t){(new o.default).onReady(function(e){t(e)})}},{key:"setEnabled",value:function(t){alert(t),this.enabled=t}},{key:"getEnabled",value:function(){return this.enabled}}])&&i(e.prototype,n),r&&i(e,r),t}();e.default=a,t.exports=e.default},function(t,e,n){"use strict";function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n(3);var o=n(7),i=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,i;return e=t,(n=[{key:"buildUX",value:function(){var t=document.createElement("a");return t.classList.add("capable-widget"),document.body.appendChild(t),t}},{key:"onReady",value:function(t){var e=this;o(function(){t(e.buildUX())})}}])&&r(e.prototype,n),i&&r(e,i),t}();e.default=i,t.exports=e.default},function(t,e,n){var r=n(4),o=n(5);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});t.exports=a},function(t,e,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function d(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function s(t,e){for(var n={},r=[],o=0;o<t.length;o++){var i=t[o],s=e.base?i[0]+e.base:i[0],l=n[s]||0,c="".concat(s," ").concat(l);n[s]=l+1;var u=d(c),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==u?(a[u].references++,a[u].updater(p)):a.push({identifier:c,updater:g(p,e),references:1}),r.push(c)}return r}function l(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach(function(t){e.setAttribute(t,r[t])}),"function"==typeof t.insert)t.insert(e);else{var a=i(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,u=(c=[],function(t,e){return c[t]=e,c.filter(Boolean).join("\n")});function p(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=u(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}var h=null,f=0;function g(t,e){var n,r,o;if(e.singleton){var i=f++;n=h||(h=l(e)),r=p.bind(null,n,i,!1),o=p.bind(null,n,i,!0)}else n=l(e),r=function(t,e,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o());var n=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=d(n[r]);a[o].references--}for(var i=s(t,e),l=0;l<n.length;l++){var c=d(n[l]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}n=i}}}},function(t,e,n){(e=n(6)(!1)).push([t.i,".capable-widget {\n    border:1px solid red;\n    width:60px;\n    height:60px;\n    position: absolute;\n    bottom:10px;\n    right:10px;\n    display:block;\n}\n.you-custom-theme-class .margin {\n    background-color: blue;\n    opacity:0.1;\n}\n\n.you-custom-theme-class .border {\n    background-color: red;\n    opacity:0.1;\n}\n\n.you-custom-theme-class .padding {\n    background-color: green;\n    opacity:0.1;\n}\n\n.you-custom-theme-class .content {\n    background-color: gray;\n    opacity:0.1;\n}",""]),t.exports=e},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var o=(a=r,d=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),"/*# ".concat(s," */")),i=r.sources.map(function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")});return[n].concat(i).concat([o]).join("\n")}var a,d,s;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n}).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var d=0;d<t.length;d++){var s=[].concat(t[d]);r&&o[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),e.push(s))}},e}},function(t,e,n){"use strict";t.exports=function(t){if("undefined"==typeof document)throw new Error("document-ready only runs in the browser");var e=document.readyState;if("complete"===e||"interactive"===e)return setTimeout(t,0);document.addEventListener("DOMContentLoaded",function(){t()})}},function(t,e,n){t.exports=function(){"use strict";function t(t,e){var n=t;return Object.keys(e).forEach(function(t){({}).hasOwnProperty.call(e,t)&&(n[t]=e[t])}),n}function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"object"===(void 0===t?"undefined":d(t))&&1===t.nodeType&&"object"===d(t.style)&&"object"===d(t.ownerDocument)}function n(t,n){return n&&e(n)?n.querySelector(t):document.querySelector(t)}function r(t,e){Object.keys(e).forEach(function(n){t.style[n]=e[n]})}function o(t,e){for(var n=0;t;)t.nodeName.toLowerCase()===e&&(n+=1),t=t.previousElementSibling;return n}function i(e){var n={},r=getComputedStyle(e);return["border-top-width","border-right-width","border-bottom-width","border-left-width","margin-top","margin-right","margin-bottom","margin-left","padding-top","padding-right","padding-bottom","padding-left","z-index"].forEach(function(t){n[t]=parseFloat(r[t])||0}),t(n,{width:e.offsetWidth-n["border-left-width"]-n["border-right-width"]-n["padding-left"]-n["padding-right"],height:e.offsetHeight-n["border-top-width"]-n["border-bottom-width"]-n["padding-top"]-n["padding-bottom"]}),t(n,function(t){for(var e=getComputedStyle(t),n=t.getBoundingClientRect().left-parseFloat(e["margin-left"]),r=t.getBoundingClientRect().top-parseFloat(e["margin-top"]),o=t.parent;o;)e=getComputedStyle(o),n+=o.frameElement.getBoundingClientRect().left-parseFloat(e["margin-left"]),r+=o.frameElement.getBoundingClientRect().top-parseFloat(e["margin-top"]),o=o.parent;return{top:r,left:n}}(e)),n}function a(t,e){for(;null!=t&&"BODY"!==t.tagName.toUpperCase();){if(t==e)return!0;t=t.parentNode}return!1}!function(t,e){if("undefined"!=typeof document){t=t||"";var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css",r.styleSheet?r.styleSheet.cssText=t:r.appendChild(document.createTextNode(t)),n.appendChild(r)}}(".dom-inspector {\n    position: fixed;\n    pointer-events: none;\n}\n\n.dom-inspector>div {\n\tposition: absolute;\n}\n\n.dom-inspector .tips {\n\tbackground-color: #333740;\n\tfont-size: 0;\n\tline-height: 18px;\n\tpadding: 3px 10px;\n\tposition: fixed;\n\tborder-radius: 4px;\n\tdisplay: none;\n}\n\n.dom-inspector .tips.reverse{\n\n}\n\n.dom-inspector .tips .triangle {\n\twidth: 0;\n\theight: 0;\n\tposition: absolute;\n\tborder-top: 8px solid #333740;\n\tborder-right: 8px solid transparent;\n\tborder-bottom: 8px solid transparent;\n\tborder-left: 8px solid transparent;\n\tleft: 10px;\n\ttop: 24px;\n}\n\n.dom-inspector .tips.reverse .triangle {\n\tborder-top: 8px solid transparent;\n\tborder-right: 8px solid transparent;\n\tborder-bottom: 8px solid #333740;\n\tborder-left: 8px solid transparent;\n\tleft: 10px;\n\ttop: -16px;\n}\n\n.dom-inspector .tips>div {\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\tfont-size: 12px;\n\tfont-family: Consolas, Menlo, Monaco, Courier, monospace;\n\toverflow: auto;\n}\n\n.dom-inspector .tips .tag {\n\tcolor: #e776e0;\n}\n\n.dom-inspector .tips .id {\n\tcolor: #eba062;\n}\n\n.dom-inspector .tips .class {\n\tcolor: #8dd2fb;\n}\n\n.dom-inspector .tips .line {\n\tcolor: #fff;\n}\n\n.dom-inspector .tips .size {\n\tcolor: #fff;\n}\n\n.dom-inspector-theme-default {\n\n}\n\n.dom-inspector-theme-default .margin {\n\tbackground-color: rgba(255, 81, 81, 0.75);\n}\n\n.dom-inspector-theme-default .border {\n\tbackground-color: rgba(255, 241, 81, 0.75);\n}\n\n.dom-inspector-theme-default .padding {\n\tbackground-color: rgba(81, 255, 126, 0.75);\n}\n\n.dom-inspector-theme-default .content {\n\tbackground-color: rgba(81, 101, 255, 0.75);\n}\n");var d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},l=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)},u={};return["log","warn","error"].forEach(function(t){u[t]=function(){}}),function(){function t(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};s(this,t),this._doc=window.document,this.root=r.root?e(r.root)?r.root:n(r.root):n("body"),function(t){return"null"===Object.prototype.toString.call(t).replace(/\[object[\s]/,"").replace("]","").toLowerCase()}(this.root)&&(u.warn("Root element is null. Auto select body as root"),this.root=n("body")),this.theme=r.theme||"dom-inspector-theme-default",this.exclude=this._formatExcludeOption(r.exclude||[]),this.overlay={},this.overlayId="",this.target="",this.destroyed=!1,this._cachedTarget="",this._throttleOnMove=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,n=void 0,r=void 0,o=Date.now();return function(){function i(){o=Date.now(),n=null,t.apply(l,d)}for(var a=arguments.length,d=Array(a),s=0;s<a;s++)d[s]=arguments[s];var l=this;clearTimeout(n),(r=Date.now()-o)>e?i():n=setTimeout(i,e-r)}}(this._onMove.bind(this),100),this._init()}return l(t,[{key:"enable",value:function(){if(this.destroyed)return u.warn("Inspector instance has been destroyed! Please redeclare it.");this.overlay.parent.style.display="block",this.root.addEventListener("mousemove",this._throttleOnMove)}},{key:"pause",value:function(){this.root.removeEventListener("mousemove",this._throttleOnMove)}},{key:"disable",value:function(){this.overlay.parent.style.display="none",this.overlay.parent.style.width=0,this.overlay.parent.style.height=0,this.target=null,this.root.removeEventListener("mousemove",this._throttleOnMove)}},{key:"destroy",value:function(){this.destroyed=!0,this.disable(),this.overlay={}}},{key:"getXPath",value:function(t){if(!e(t)&&!this.target)return u.warn("Target element is not found. Warning function name:%c getXPath","color: #ff5151");if(t||(t=this.target),t.hasAttribute("id"))return"//"+t.tagName.toLowerCase()+'[@id="'+t.id+'"]';if(t.hasAttribute("class"))return"//"+t.tagName.toLowerCase()+'[@class="'+t.getAttribute("class")+'"]';for(var n=[];t.nodeType===Node.ELEMENT_NODE;){var r=t.nodeName.toLowerCase(),i=o(t,r);n.push(t.tagName.toLowerCase()+(1===i?"":"["+i+"]")),t=t.parentNode}return"/"+n.reverse().join("/")}},{key:"getSelector",value:function(t){if(!e(t)&&!this.target)return u.warn("Target element is not found. Warning function name:%c getCssPath","color: #ff5151");t||(t=this.target);for(var n=[];t.nodeType===Node.ELEMENT_NODE;){var r=t.nodeName.toLowerCase();if(t.hasAttribute("id"))r+="#"+t.id;else{var i=o(t,r);1!==i&&(r+=":nth-of-type("+i+")")}n.unshift(r),t=t.parentNode}return n.join(">")}},{key:"getElementInfo",value:function(t){return e(t)||this.target?i(t||this.target):u.warn("Target element is not found. Warning function name:%c getElementInfo","color: #ff5151")}},{key:"_init",value:function(){this.overlayId="dom-inspector-"+Date.now();var t=this._createElement("div",{id:this.overlayId,class:"dom-inspector "+this.theme,style:"z-index: "+([].concat(c(document.all)).reduce(function(t,e){return Math.max(t,+window.getComputedStyle(e).zIndex||0)},0)+1)});this.overlay={parent:t,content:this._createSurroundEle(t,"content"),paddingTop:this._createSurroundEle(t,"padding padding-top"),paddingRight:this._createSurroundEle(t,"padding padding-right"),paddingBottom:this._createSurroundEle(t,"padding padding-bottom"),paddingLeft:this._createSurroundEle(t,"padding padding-left"),borderTop:this._createSurroundEle(t,"border border-top"),borderRight:this._createSurroundEle(t,"border border-right"),borderBottom:this._createSurroundEle(t,"border border-bottom"),borderLeft:this._createSurroundEle(t,"border border-left"),marginTop:this._createSurroundEle(t,"margin margin-top"),marginRight:this._createSurroundEle(t,"margin margin-right"),marginBottom:this._createSurroundEle(t,"margin margin-bottom"),marginLeft:this._createSurroundEle(t,"margin margin-left"),tips:this._createSurroundEle(t,"tips",'<div class="tag"></div><div class="id"></div><div class="class"></div><div class="line">&nbsp;|&nbsp;</div><div class="size"></div><div class="triangle"></div>')},n("body").appendChild(t)}},{key:"_createElement",value:function(t,e,n){var r=this._doc.createElement(t);return Object.keys(e).forEach(function(t){r.setAttribute(t,e[t])}),n&&(r.innerHTML=n),r}},{key:"_createSurroundEle",value:function(t,e,n){var r=this._createElement("div",{class:e},n);return t.appendChild(r),r}},{key:"_onMove",value:function(t){for(var e=0;e<this.exclude.length;e+=1){var o=this.exclude[e];if(o.isEqualNode(t.target)||a(t.target,o))return}if(this.target=t.target,this.target===this._cachedTarget)return null;this._cachedTarget=this.target;var d=i(t.target),s={width:d.width,height:d.height},l={width:d["padding-left"]+s.width+d["padding-right"],height:d["padding-top"]+s.height+d["padding-bottom"]},u={width:d["border-left-width"]+l.width+d["border-right-width"],height:d["border-top-width"]+l.height+d["border-bottom-width"]},p={width:d["margin-left"]+u.width+d["margin-right"],height:d["margin-top"]+u.height+d["margin-bottom"]};r(this.overlay.parent,{width:p.width+"px",height:p.height+"px",top:d.top+"px",left:d.left+"px"}),r(this.overlay.content,{width:s.width+"px",height:s.height+"px",top:d["margin-top"]+d["border-top-width"]+d["padding-top"]+"px",left:d["margin-left"]+d["border-left-width"]+d["padding-left"]+"px"}),r(this.overlay.paddingTop,{width:l.width+"px",height:d["padding-top"]+"px",top:d["margin-top"]+d["border-top-width"]+"px",left:d["margin-left"]+d["border-left-width"]+"px"}),r(this.overlay.paddingRight,{width:d["padding-right"]+"px",height:l.height-d["padding-top"]+"px",top:d["padding-top"]+d["margin-top"]+d["border-top-width"]+"px",right:d["margin-right"]+d["border-right-width"]+"px"}),r(this.overlay.paddingBottom,{width:l.width-d["padding-right"]+"px",height:d["padding-bottom"]+"px",bottom:d["margin-bottom"]+d["border-bottom-width"]+"px",right:d["padding-right"]+d["margin-right"]+d["border-right-width"]+"px"}),r(this.overlay.paddingLeft,{width:d["padding-left"]+"px",height:l.height-d["padding-top"]-d["padding-bottom"]+"px",top:d["padding-top"]+d["margin-top"]+d["border-top-width"]+"px",left:d["margin-left"]+d["border-left-width"]+"px"}),r(this.overlay.borderTop,{width:u.width+"px",height:d["border-top-width"]+"px",top:d["margin-top"]+"px",left:d["margin-left"]+"px"}),r(this.overlay.borderRight,{width:d["border-right-width"]+"px",height:u.height-d["border-top-width"]+"px",top:d["margin-top"]+d["border-top-width"]+"px",right:d["margin-right"]+"px"}),r(this.overlay.borderBottom,{width:u.width-d["border-right-width"]+"px",height:d["border-bottom-width"]+"px",bottom:d["margin-bottom"]+"px",right:d["margin-right"]+d["border-right-width"]+"px"}),r(this.overlay.borderLeft,{width:d["border-left-width"]+"px",height:u.height-d["border-top-width"]-d["border-bottom-width"]+"px",top:d["margin-top"]+d["border-top-width"]+"px",left:d["margin-left"]+"px"}),r(this.overlay.marginTop,{width:p.width+"px",height:d["margin-top"]+"px",top:0,left:0}),r(this.overlay.marginRight,{width:d["margin-right"]+"px",height:p.height-d["margin-top"]+"px",top:d["margin-top"]+"px",right:0}),r(this.overlay.marginBottom,{width:p.width-d["margin-right"]+"px",height:d["margin-bottom"]+"px",bottom:0,right:d["margin-right"]+"px"}),r(this.overlay.marginLeft,{width:d["margin-left"]+"px",height:p.height-d["margin-top"]-d["margin-bottom"]+"px",top:d["margin-top"]+"px",left:0}),n(".tag",this.overlay.tips).innerHTML=this.target.tagName.toLowerCase(),n(".id",this.overlay.tips).innerHTML=this.target.id?"#"+this.target.id:"",n(".class",this.overlay.tips).innerHTML=[].concat(c(this.target.classList)).map(function(t){return"."+t}).join(""),n(".size",this.overlay.tips).innerHTML=p.width+"x"+p.height;var h=0;d.top>=32?(this.overlay.tips.classList.remove("reverse"),h=d.top-24-8):(this.overlay.tips.classList.add("reverse"),h=p.height+d.top+8),r(this.overlay.tips,{top:h+"px",left:d.left+"px",display:"block"})}},{key:"_formatExcludeOption",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=[];return t.forEach(function(t){return"string"==typeof t?r.push(n(t)):e(t)?r.push(t):void 0}),r}}]),t}()}()}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,